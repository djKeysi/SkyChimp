# Generated by Django 4.2.7 on 2023-11-10 15:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('recipients', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='название рассылки')),
                ('time', models.TimeField(verbose_name='время отправки')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='дата отправки (старта)')),
                ('stop_date', models.DateField(default=django.utils.timezone.now, verbose_name='дата завершения')),
                ('activity', models.CharField(choices=[('draft', 'черновик'), ('paused', 'приостановлена'), ('active', 'активна')], default='draft', max_length=100, verbose_name='активность')),
                ('frequency', models.CharField(choices=[('WEEKLY', 'Раз в неделю'), ('MONTHLY', 'Раз в месяц'), ('DAILY', 'Раз в день'), ('ONCE', 'Разово')], default='ONCE', max_length=150, verbose_name='периодичность')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('job_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('category', models.ManyToManyField(to='recipients.category', verbose_name='категория получателей')),
            ],
            options={
                'verbose_name': 'рассылка',
                'verbose_name_plural': 'рассылки',
            },
        ),
        migrations.CreateModel(
            name='Try',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False, verbose_name='статус')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='отчет об ошибке')),
                ('launched_at', models.DateTimeField(auto_now=True, verbose_name='время запуска')),
                ('mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailsender.mail', verbose_name='рассылка')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='владелец')),
            ],
            options={
                'verbose_name': 'попытка',
                'verbose_name_plural': 'попытки',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='заголовок')),
                ('content', models.TextField(verbose_name='содержание')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='владелец')),
            ],
            options={
                'verbose_name': 'сообщение',
                'verbose_name_plural': 'сообщения',
            },
        ),
        migrations.AddField(
            model_name='mail',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailsender.message', verbose_name='выбрать сообщение'),
        ),
        migrations.AddField(
            model_name='mail',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='владелец'),
        ),
    ]
